pipeline {
    agent {label 'SlaveMachine0068'}
    tools {
        nodejs "nodejs"
    }
    stages {
        stage('install') {

            steps {

                // 'ci' install node modules
                sh 'npm ci'

            }
        }
        stage('Test') {

            steps {

                //execute lint
                sh 'npm run lint'

                //execute unit test cases 
                sh 'npm run test'

                //execute code coverage and test evidence
                sh 'npm run report'

            }

        }

        stage('dist') {

            steps {

                //execute dist
                sh 'npm run dist-prod'
                sh "echo 'build number :${env.BUILD_NUMBER}'"

            }

        }
        
        stage('Dependency Check') {
            steps {
				sh "npm prune --production"
                sh "mkdir -p dist/report"
                sh "'$DEPENDENCY_PATH'  --project dwt-service  --format XML --out 'dist/report/dependency-check-report.xml'  --suppression 'dependency-check-suppressions.xml' --scan ."
                dependencyCheckPublisher pattern: 'dist/report/dependency-check-report.xml', failedTotalCritical: '0', failedTotalHigh: '0', failedTotalLow: '0', failedTotalMedium: '0'
            }
        }

        stage('Build copy'){

            steps{
                script{
                    //script for creating the folder with a name of build number and copy the build file
                    def myVar = "${env.BUILD_NUMBER}"
                    sh "echo $myVar"
                    sh "mkdir $DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}"
                    sh "mkdir $DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}/data"
                    sh "mkdir $DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}/certs"
                    sh "cp -rf 'dist' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                    sh "cp -rf 'package.json' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                    sh "cp -rf 'package-lock.json' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                    sh "cp -rf '.npmrc' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                    sh "cp -rf 'schema' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                    sh "cp -rf '.env' '$DWT_SERVICE_BUILD_FOLDER/DWT-SERVICE-${myVar}'"
                }
            }

        }
        stage('Build Docker Image') {
            steps {
                sh "docker build -t docker-integration.cernerrepos.net/dwt/dwt-service:'${env.BUILD_NUMBER}' -t docker-integration.cernerrepos.net/dwt/dwt-service:latest ."
            }
        }
        stage('Push Docker Image') {
            steps {
                sh "docker push docker-integration.cernerrepos.net/dwt/dwt-service"
            }
        }
    }
}